package formularios.Ventas;

import clases.Instancias;
import clases.big;
import clases.metodosGenerales;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.KeyStroke;
import logs.Logs;

public class dlgCotizacionesPendientes extends javax.swing.JDialog {

    private Instancias instancias;
    private metodosGenerales metodos;

    public dlgCotizacionesPendientes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        instancias = Instancias.getInstancias();
        metodos = new metodosGenerales();

        tblCotizaciones.setModel(instancias.getSql().getRegistrosCotizacionesPendientes());
        Icon icono = null;
        ImageIcon fot = new ImageIcon(getClass().getResource("/imagenes/borrar.png"));
        icono = new ImageIcon(fot.getImage().getScaledInstance(20, 20, Image.SCALE_DEFAULT));
        
        for (int i = 0; i < tblCotizaciones.getRowCount(); i++) {
        tblCotizaciones.getValueAt(i, 7).getClass();
            tblCotizaciones.setValueAt(metodos.fecha(tblCotizaciones.getValueAt(i, 3).toString()), i, 3);
            tblCotizaciones.setValueAt(big.setMoneda(big.getBigDecimal(tblCotizaciones.getValueAt(i, 4))), i, 4);
            tblCotizaciones.setValueAt(icono, i, 7); 
        }

        tblCotizaciones.getColumnModel().getColumn(1).setMinWidth(80);
        tblCotizaciones.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblCotizaciones.getColumnModel().getColumn(1).setMaxWidth(250);
        tblCotizaciones.getColumnModel().getColumn(5).setMinWidth(40);
        tblCotizaciones.getColumnModel().getColumn(5).setPreferredWidth(40);
        tblCotizaciones.getColumnModel().getColumn(5).setMaxWidth(40);
        tblCotizaciones.getColumnModel().getColumn(6).setMinWidth(50);
        tblCotizaciones.getColumnModel().getColumn(6).setPreferredWidth(50);
        tblCotizaciones.getColumnModel().getColumn(6).setMaxWidth(50);

        this.setLocationRelativeTo(null);
        this.setVisible(true);

        this.getRootPane().registerKeyboardAction(accion("cerrar", this), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
    }

    private ActionListener accion(final String opc, final JDialog ventana) {
        ActionListener a = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                switch (opc) {
                    case "cerrar":
                        ventana.dispose();
                        break;
                }
            }
        };
        return a;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCotizaciones = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnFinalizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cotizaciones pendientes...");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblCotizaciones.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        tblCotizaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cotizacion", "Id", "Nombre", "Fecha", "Total", "Realizar", "Plazo", "Anular"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCotizaciones.setRowHeight(25);
        tblCotizaciones.getTableHeader().setReorderingAllowed(false);
        tblCotizaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCotizacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCotizaciones);
        if (tblCotizaciones.getColumnModel().getColumnCount() > 0) {
            tblCotizaciones.getColumnModel().getColumn(5).setMinWidth(60);
            tblCotizaciones.getColumnModel().getColumn(5).setPreferredWidth(60);
            tblCotizaciones.getColumnModel().getColumn(5).setMaxWidth(60);
            tblCotizaciones.getColumnModel().getColumn(6).setMinWidth(60);
            tblCotizaciones.getColumnModel().getColumn(6).setPreferredWidth(60);
            tblCotizaciones.getColumnModel().getColumn(6).setMaxWidth(60);
            tblCotizaciones.getColumnModel().getColumn(7).setMinWidth(50);
            tblCotizaciones.getColumnModel().getColumn(7).setPreferredWidth(50);
            tblCotizaciones.getColumnModel().getColumn(7).setMaxWidth(50);
        }

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("COTIZACIONES");

        btnFinalizar.setBackground(new java.awt.Color(46, 204, 113));
        btnFinalizar.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        btnFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agregar.png"))); // NOI18N
        btnFinalizar.setText("FACTURAR");
        btnFinalizar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnFinalizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFinalizar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnFinalizar.setMargin(new java.awt.Insets(2, 7, 2, 5));
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblCotizacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCotizacionesMouseClicked
        if (evt.getClickCount() == 2) {
            if (tblCotizaciones.getSelectedColumn() == 4) {

            } else if (tblCotizaciones.getSelectedColumn() == 7) {
                if (metodos.msgPregunta(null, "¿Anular la cotización?") == 0) {
                    if(instancias.getSql().modificarCotizacionesEstadoGeneral(tblCotizaciones.getValueAt(tblCotizaciones.getSelectedRow(), 0).toString(),"","ANULA")){
                     metodos.msgExito(null, "Anulada Correctamente");
                     this.dispose();
                    }else{
                     metodos.msgError(null, "Error al anular la cotización");
                    }                    
                } 
            } else {
                try {
                    instancias.getCotiza().cargarCotizaciones(tblCotizaciones.getValueAt(tblCotizaciones.getSelectedRow(), 0).toString());
                    this.dispose();
                } catch (Exception ex) {
                    Logs.error(ex);
                    metodos.msgError(null, "Ocurrio un error : "+ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_tblCotizacionesMouseClicked

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        //VALIDAMOS QUE LA COTIZACIÓN A REALIZAR NO SEA A CREDITO Y DEL CLIENTE 1010
        for (int i = 0; i < tblCotizaciones.getRowCount(); i++) {
            if ((Boolean) tblCotizaciones.getValueAt(i, 5)) {

                int diasPlazo = 0;
                try {
                    diasPlazo = Integer.parseInt(tblCotizaciones.getValueAt(i, 6).toString());
                } catch (Exception e) {
                    Logs.error(e);
                }

                if (diasPlazo > 0) {
                    String nit = tblCotizaciones.getValueAt(i, 1).toString();
                    if (nit.equals("1010")) {
                        metodos.msgError(null, "No se puede facturar a credito");
                        return;
                    }
                }
            }
        }

        //SE EMPIEZA A REALIZAR LAS FACTURAS DE LAS COTIZACIONES SELECCIONADAS
        for (int i = 0; i < tblCotizaciones.getRowCount(); i++) {
            if ((Boolean) tblCotizaciones.getValueAt(i, 5)) {

                try {
                    
                    int diasPlazo = 0;
                    try {
                        diasPlazo = Integer.parseInt(tblCotizaciones.getValueAt(i, 6).toString());
                    } catch (Exception e) {
                        Logs.error(e);
                    }
                    
                    instancias.getFactura().facturarCotizacion(tblCotizaciones.getValueAt(i, 0).toString(), String.valueOf(diasPlazo));
                } catch (Exception ex) {
                    Logs.error(ex);
                    metodos.msgError(null, "Ocurrio un error : "+ex.getMessage());
                }
            }
        }

        this.dispose();
    }//GEN-LAST:event_btnFinalizarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCotizaciones;
    // End of variables declaration//GEN-END:variables
}
